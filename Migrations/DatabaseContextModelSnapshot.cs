// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using apbd_cw5.Data;

#nullable disable

namespace apbd_cw5.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "10.0.0-preview.4.25258.110")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("apbd_cw5.Models.Doctor", b =>
                {
                    b.Property<int>("DoctorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DoctorId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("DoctorId");

                    b.ToTable("Doctor", (string)null);

                    b.HasData(
                        new
                        {
                            DoctorId = 1,
                            Email = "jane@doe.com",
                            FirstName = "Doctor Jane",
                            LastName = "Doe"
                        },
                        new
                        {
                            DoctorId = 2,
                            Email = "john@doe.com",
                            FirstName = "Doctor John",
                            LastName = "Doe"
                        });
                });

            modelBuilder.Entity("apbd_cw5.Models.Medicament", b =>
                {
                    b.Property<int>("MedicamentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MedicamentId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MedicamentId");

                    b.ToTable("Medicament", (string)null);

                    b.HasData(
                        new
                        {
                            MedicamentId = 1,
                            Description = "Description 1",
                            Name = "Medicament 1",
                            Type = "Type 1"
                        },
                        new
                        {
                            MedicamentId = 2,
                            Description = "Description 2",
                            Name = "Medicament 2",
                            Type = "Type 2"
                        });
                });

            modelBuilder.Entity("apbd_cw5.Models.Patient", b =>
                {
                    b.Property<int>("IdPatient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPatient"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdPatient");

                    b.ToTable("Patient", (string)null);

                    b.HasData(
                        new
                        {
                            IdPatient = 1,
                            BirthDate = new DateTime(2000, 5, 24, 0, 0, 0, 0, DateTimeKind.Local),
                            FirstName = "Patient Jane",
                            LastName = "Doe"
                        },
                        new
                        {
                            IdPatient = 2,
                            BirthDate = new DateTime(2005, 5, 24, 0, 0, 0, 0, DateTimeKind.Local),
                            FirstName = "Patient John",
                            LastName = "Doe"
                        });
                });

            modelBuilder.Entity("apbd_cw5.Models.Prescription", b =>
                {
                    b.Property<int>("PrescriptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PrescriptionId"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("DoctorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.HasKey("PrescriptionId");

                    b.HasIndex("DoctorId");

                    b.HasIndex("PatientId");

                    b.ToTable("Prescription", (string)null);

                    b.HasData(
                        new
                        {
                            PrescriptionId = 1,
                            Date = new DateTime(2025, 5, 19, 0, 0, 0, 0, DateTimeKind.Local),
                            DoctorId = 2,
                            DueDate = new DateTime(2025, 6, 8, 0, 0, 0, 0, DateTimeKind.Local),
                            PatientId = 1
                        },
                        new
                        {
                            PrescriptionId = 2,
                            Date = new DateTime(2025, 5, 21, 0, 0, 0, 0, DateTimeKind.Local),
                            DoctorId = 1,
                            DueDate = new DateTime(2025, 6, 5, 0, 0, 0, 0, DateTimeKind.Local),
                            PatientId = 2
                        });
                });

            modelBuilder.Entity("apbd_cw5.Models.PrescriptionMedicament", b =>
                {
                    b.Property<int>("PrescriptionId")
                        .HasColumnType("int");

                    b.Property<int>("MedicamentId")
                        .HasColumnType("int");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Dose")
                        .HasColumnType("int");

                    b.HasKey("PrescriptionId", "MedicamentId");

                    b.HasIndex("MedicamentId");

                    b.ToTable("PrescriptionMedicament", (string)null);

                    b.HasData(
                        new
                        {
                            PrescriptionId = 1,
                            MedicamentId = 1,
                            Details = "Some details 1",
                            Dose = 10
                        },
                        new
                        {
                            PrescriptionId = 2,
                            MedicamentId = 2,
                            Details = "Some details 2",
                            Dose = 6
                        });
                });

            modelBuilder.Entity("apbd_cw5.Models.Prescription", b =>
                {
                    b.HasOne("apbd_cw5.Models.Doctor", "Doctor")
                        .WithMany("Prescriptions")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("apbd_cw5.Models.Patient", "Patient")
                        .WithMany("Prescriptions")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("apbd_cw5.Models.PrescriptionMedicament", b =>
                {
                    b.HasOne("apbd_cw5.Models.Medicament", "Medicament")
                        .WithMany("PrescriptionMedicaments")
                        .HasForeignKey("MedicamentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("apbd_cw5.Models.Prescription", "Prescription")
                        .WithMany("PrescriptionMedicaments")
                        .HasForeignKey("PrescriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medicament");

                    b.Navigation("Prescription");
                });

            modelBuilder.Entity("apbd_cw5.Models.Doctor", b =>
                {
                    b.Navigation("Prescriptions");
                });

            modelBuilder.Entity("apbd_cw5.Models.Medicament", b =>
                {
                    b.Navigation("PrescriptionMedicaments");
                });

            modelBuilder.Entity("apbd_cw5.Models.Patient", b =>
                {
                    b.Navigation("Prescriptions");
                });

            modelBuilder.Entity("apbd_cw5.Models.Prescription", b =>
                {
                    b.Navigation("PrescriptionMedicaments");
                });
#pragma warning restore 612, 618
        }
    }
}
